// Auto-generated by BRRTRouter

use serde::{Deserialize, Serialize};
use crate::dispatcher::HandlerRequest;
use crate::handlers;
use crate::typed::{TypedHandlerRequest, TypedHandlerResponse};

#[derive(Debug, Deserialize)]
pub struct Request {
    // TODO: fill in fields based on schema
}

#[derive(Debug, Serialize)]
pub struct Response {
    // TODO: fill in fields based on schema
}

pub fn handler(req: TypedHandlerRequest<Request>) -> Response {
    crate::controllers::post_item::handle(req)
}

impl From<HandlerRequest> for TypedHandlerRequest<Request> {
    fn from(_req: HandlerRequest) -> Self {
        // TODO: convert HandlerRequest to TypedHandlerRequest<Request>
        unimplemented!()
    }
}

impl From<TypedHandlerRequest<Request>> for HandlerRequest {
    fn from(_req: TypedHandlerRequest<Request>) -> Self {
        // TODO: convert TypedHandlerRequest<Request> to HandlerRequest
        unimplemented!()
    }
}

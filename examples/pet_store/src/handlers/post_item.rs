
// Auto-generated by BRRTRouter

use serde::{ Deserialize, Serialize };
use serde_json::Value;
use crate::brrtrouter::dispatcher::HandlerRequest;
use crate::brrtrouter::typed::{ TypedHandlerRequest, TypedHandlerResponse, TypedHandlerFor };

#[derive(Debug, Deserialize)]
pub struct Request {
    #[serde(skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,

    pub id: String,

    }

#[derive(Debug, Serialize)]
pub struct Response {
    #[serde(skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    
    #[serde(skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    
    }

pub fn handler(req: TypedHandlerRequest<Request>) -> Response {
    crate::controllers::post_item::handle(req)
}

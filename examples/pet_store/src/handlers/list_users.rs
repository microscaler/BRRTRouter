
// Auto-generated by BRRTRouter

use serde::{ Deserialize, Serialize };
use crate::brrtrouter::typed::TypedHandlerRequest;

use crate::handlers::types::User;
#[derive(Debug, Deserialize, Serialize)]
pub struct Request {
    // Parameters and body fields
    }

#[derive(Debug, Serialize)]
pub struct Response {
    #[serde(skip_serializing_if = "Option::is_none")]
    pub users: Option<Vec<User>>,
    
    }

pub fn handler(req: TypedHandlerRequest<Request>) -> Response {
    crate::controllers::list_users::handle(req)
}
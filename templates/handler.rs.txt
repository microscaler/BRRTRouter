{# handler.rs.txt - Askama template #}
// Auto-generated by BRRTRouter
use serde::{Deserialize, Serialize};
use brrtrouter_macros::handler;
use crate::brrtrouter::typed::TypedHandlerRequest;
{% for import in imports -%}
use crate::handlers::types::{{ import }};
{% endfor %}

#[handler(
    request(
        {%- for field in request_fields -%}
        {{ field.name }}: {% if field.optional %}Option<{{ field.ty }}>{% else %}{{ field.ty }}{% endif %}{% if !loop.last %}, {% endif %}
        {%- endfor -%}
    ),
    response(
        {%- for field in response_fields -%}
        {{ field.name }}: {% if field.optional %}Option<{{ field.ty }}>{% else %}{{ field.ty }}{% endif %}{% if !loop.last %}, {% endif %}
        {%- endfor -%}
    )
)]
pub fn handler(req: TypedHandlerRequest<Request>) -> Response {
    crate::controllers::{{ handler_name }}::handle(req)
}

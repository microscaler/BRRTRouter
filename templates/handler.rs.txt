{# handler.rs.txt - Askama template #}
// Auto-generated by BRRTRouter
use serde::{ Deserialize, Serialize };
use crate::brrtrouter::typed::TypedHandlerRequest;

{% for import in imports -%}
use crate::handlers::types::{{ import }};
{% endfor -%}

#[derive(Debug, Deserialize, Serialize)]
pub struct Request {
    // Parameters and body fields
    {% for field in request_fields -%}
    {% if field.optional %}#[serde(skip_serializing_if = "Option::is_none")]
    pub {{ field.name }}: Option<{{ field.ty }}>,
    {% else %}pub {{ field.name }}: {{ field.ty }},
    {% endif %}
    {% endfor -%}
}

#[derive(Debug, Serialize)]
pub struct Response {
    {% for field in response_fields -%}
    {% if field.optional %}#[serde(skip_serializing_if = "Option::is_none")]
    pub {{ field.name }}: Option<{{ field.ty }}>,
    {% else %}pub {{ field.name }}: {{ field.ty }},
    {% endif %}
    {% endfor -%}
}

pub fn handler(req: TypedHandlerRequest<Request>) -> Response {
    crate::controllers::{{ handler_name }}::handle(req)
}
